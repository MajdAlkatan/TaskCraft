# Generated by Django 5.1.7 on 2025-04-12 10:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'task_categories',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(default='There is no description', max_length=2000)),
                ('start_date', models.DateField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='tasks/<built-in function id>/')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='Category_Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20)),
                ('task_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task_category')),
            ],
            options={
                'db_table': 'category_options',
            },
        ),
        migrations.CreateModel(
            name='tasks_task_categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_option_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.category_option')),
                ('task_category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task_category')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task')),
            ],
            options={
                'db_table': 'tasks_task_categories',
            },
        ),
        migrations.AddField(
            model_name='task_category',
            name='tasks',
            field=models.ManyToManyField(related_name='task_categories', through='tasks.tasks_task_categories', to='tasks.task'),
        ),
        migrations.AddField(
            model_name='category_option',
            name='tasks',
            field=models.ManyToManyField(related_name='category_cptions', through='tasks.tasks_task_categories', to='tasks.task'),
        ),
        migrations.CreateModel(
            name='users_tasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.task')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_tasks',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='users',
            field=models.ManyToManyField(related_name='tasks', through='tasks.users_tasks', to=settings.AUTH_USER_MODEL),
        ),
    ]
